name: Continuous integration

run-name: "CI run '${{ github.head_ref || github.ref_name }}'"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  RUST_VERSION: 1.87.0

jobs:
  build:
    name: Build binary
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build binary
        run: cargo build

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: kubef
          path: target/debug/kubef

  format:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Lookup the nightly toolchain
        id: info
        run: |
          set -x
          echo "toolchain=$(cat rust-toolchain.nightly)" >> $GITHUB_OUTPUT

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          toolchain: ${{ steps.info.outputs.toolchain }}
          components: rustfmt

      - name: Setup cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Check format
        run: cargo make ci-format

  clippy:
    name: Check clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy

      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Run clippy
        run: cargo make ci-clippy

      - name: Run clippy release
        run: cargo make ci-clippy-release

  check:
    name: Check workspace
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Check workspace
        run: cargo make ci-check

      - name: Check workspace release
        run: cargo make ci-check-release
